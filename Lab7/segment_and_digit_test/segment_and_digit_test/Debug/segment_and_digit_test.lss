
AVRASM ver. 2.2.7  F:\Fall_2020\ESE_280\Labatory\7\Code\segment_and_digit_test\segment_and_digit_test\main.asm Fri Oct 23 09:48:16 2020

F:\Fall_2020\ESE_280\Labatory\7\Code\segment_and_digit_test\segment_and_digit_test\main.asm(25): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.3.300\avrasm\inc\m4809def.inc'
F:\Fall_2020\ESE_280\Labatory\7\Code\segment_and_digit_test\segment_and_digit_test\main.asm(25): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.3.300\avrasm\inc\m4809def.inc'
                                 
                                 
                                 ; segment_and_digit_test.asm
                                 ;
                                 ; Description: The program checks all of the 7-Segment
                                 ;	displays and segments to make sure they are working
                                 ;
                                 ; Author : Aditya Jindal 112835035
                                 ; Created: 10/19/2020 10:29:55 PM
                                 ;
                                 ; Register Assignments/Purpose
                                 ;	r16 = GP = general purpose, assign initial port conditions
                                 ;		= used as decrement counter in var dealy to specify 1-25 us
                                 ;	r17 = used as decrement counter in var delay
                                 ;	r18 = counter to call var delay multiple 
                                 ;	r19 = variable to multiplex LEDs
                                 ;
                                 ;
                                 ; Registers altered: r16, r17, r18, r19
                                 ;
                                 ; Section no.: 4
                                 ; Experiment no.: 7
                                 ; Bench no.: 7
                                 
                                 .list
                                 
                                 ; Design Task 1
                                 start:
000000 9880                          cbi VPORTE_DIR, 0	;Set input pin
                                 	
000001 ef0f                      	ldi r16, 0xFF		
000002 b90c                      	out VPORTD_DIR, r16	;set output port.
                                 
000003 ef00                      	ldi r16, 0xF0		;initial Port C
000004 b908                      	out VPORTC_DIR, r16
                                 
000005 e000                      	ldi r16, 0x00		;initiialize empty counter
000006 b90d                      	out VPORTD_OUT, r16	;output inital counter
                                 
                                 main_loop:
000007 e130                      	ldi r19, 0x10
000008 9530                      	com r19
000009 b939                      	out VPORTC_OUT, r19
00000a e227                      	ldi r18, 39			;call var 39 times for 1s
00000b d017                      	rcall one_sec_delay
                                 
00000c e230                      	ldi r19, 0x20
00000d 9530                      	com r19
00000e b939                      	out VPORTC_OUT, r19
00000f e227                      	ldi r18, 39			;call var 39 times for 1s
000010 d012                      	rcall one_sec_delay
                                 
000011 e430                      	ldi r19, 0x40
000012 9530                      	com r19
000013 b939                      	out VPORTC_OUT, r19 ;give power to next 7-seg dis
000014 e227                      	ldi r18, 39			;call var 39 times for 1s
000015 d00d                      	rcall one_sec_delay
                                 
000016 e830                      	ldi r19, 0x80
000017 9530                      	com r19
000018 b939                      	out VPORTC_OUT, r19 ;give power to right most 7-seg
000019 e227                      	ldi r18, 39			;call var 39 times for 1s	
00001a d008                      	rcall one_sec_delay	;variable to delay for a second
                                 
00001b cfeb                      	rjmp main_loop		;loop back to the main loop
                                 
                                 var_delay:
00001c ef0f                      	ldi r16, 255		;load r16 with 1-25ms
                                 outer_loop:
00001d e61e                      	ldi r17, 110		;load r17 with a second delay variable
                                 inner_loop:				;delay for the total decided time.
00001e 951a                      	dec r17
00001f f7f1                      	brne inner_loop
000020 950a                      	dec r16
000021 f7d9                      	brne outer_loop
                                 
000022 9508                      	ret
                                 
                                 one_sec_delay:
000023 dff8                      	rcall var_delay
000024 952a                      	dec r18
000025 3020                      	cpi r18, 0x00
000026 f7e1                      	brne one_sec_delay	;keep looping till r18 zero
000027 9508                      	ret


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega4809" register use summary:
x  :   0 y  :   0 z  :   0 r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :   0 
r5 :   0 r6 :   0 r7 :   0 r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 
r13:   0 r14:   0 r15:   0 r16:   8 r17:   2 r18:   6 r19:  12 r20:   0 
r21:   0 r22:   0 r23:   0 r24:   0 r25:   0 r26:   0 r27:   0 r28:   0 
r29:   0 r30:   0 r31:   0 
Registers used: 4 out of 35 (11.4%)

"ATmega4809" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   0 add   :   0 adiw  :   0 and   :   0 
andi  :   0 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :   0 brge  :   0 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 brlt  :   0 brmi  :   0 
brne  :   3 brpl  :   0 brsh  :   0 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :   0 cbi   :   1 cbr   :   0 
clc   :   0 clh   :   0 cli   :   0 cln   :   0 clr   :   0 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   4 cp    :   0 cpc   :   0 
cpi   :   1 cpse  :   0 dec   :   3 des   :   0 eor   :   0 fmul  :   0 
fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   0 inc   :   0 
jmp   :   0 ld    :   0 ldd   :   0 ldi   :  13 lds   :   0 lpm   :   0 
lsl   :   0 lsr   :   0 mov   :   0 movw  :   0 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   0 or    :   0 ori   :   0 out   :   7 
pop   :   0 push  :   0 rcall :   5 ret   :   2 reti  :   0 rjmp  :   1 
rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 sbi   :   0 sbic  :   0 
sbis  :   0 sbiw  :   0 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :   0 std   :   0 
sts   :   0 sub   :   0 subi  :   0 swap  :   0 tst   :   0 wdr   :   0 

Instructions used: 10 out of 114 (8.8%)

"ATmega4809" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000050     80      0     80   49152   0.2%
[.dseg] 0x002800 0x002800      0      0      0    6144   0.0%
[.eseg] 0x000000 0x000000      0      0      0     256   0.0%

Assembly complete, 0 errors, 0 warnings
